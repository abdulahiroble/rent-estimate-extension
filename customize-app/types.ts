// Generated by https://quicktype.io

export interface Response {
    result: ResponseResult[];
}

export interface ResponseResult {
    id: string;
    status_code: number;
    status_message: string;
    time: string;
    cost: number;
    result_count: number;
    path: string[];
    data: Data;
    result: ResultResult[];
}

export interface Data {
    api: string;
    function: string;
    target: Target;
    location_code: number;
    language_name: string;
    language_code: Language;
    location_name: string;
    item_types: Type[];
    filters: Array<Array<number | string>>;
    limit: number;
}

export enum Type {
    FeaturedSnippet = "featured_snippet",
    FindResultsOn = "find_results_on",
    Images = "images",
    LocalPack = "local_pack",
    Organic = "organic",
    PeopleAlsoAsk = "people_also_ask",
    RelatedSearches = "related_searches",
}

export enum Language {
    Da = "da",
}

export enum Target {
    BedstegamerlaptopDk = "bedstegamerlaptop.dk",
}

export interface ResultResult {
    target: Target;
    location_code: number;
    language_code: Language;
    total_count: number;
    items_count: number;
    metrics: Metrics;
    metrics_absolute: null;
    items: Item[];
}

export interface Item {
    keyword_data: KeywordData;
    ranked_serp_element: RankedSerpElement;
}

export interface KeywordData {
    keyword: string;
    location: number;
    language: Language;
    keyword_info: KeywordInfo;
    impressions_info: ImpressionsInfo;
    bing_keyword_info: BingKeywordInfo;
    serp_info: RankedSerpElement;
}

export interface BingKeywordInfo {
    last_updated_time: string;
    search_volume: number | null;
    monthly_searches: MonthlySearch[];
}

export interface MonthlySearch {
    year: number;
    month: number;
    search_volume: number;
}

export interface ImpressionsInfo {
    last_updated_time: string;
    bid: number;
    match_type: MatchType;
    ad_position_min: number | null;
    ad_position_max: number | null;
    ad_position_average: number | null;
    cpc_min: number | null;
    cpc_max: number | null;
    cpc_average: number | null;
    daily_impressions_min: number | null;
    daily_impressions_max: number | null;
    daily_impressions_average: number | null;
    daily_clicks_min: number | null;
    daily_clicks_max: number | null;
    daily_clicks_average: number | null;
    daily_cost_min: number | null;
    daily_cost_max: number | null;
    daily_cost_average: number | null;
}

export enum MatchType {
    Exact = "exact",
}

export interface KeywordInfo {
    last_updated_time: string;
    competition: number | null;
    cpc: number | null;
    search_volume: number;
    categories: number[] | null;
    monthly_searches: MonthlySearch[];
}

export interface RankedSerpElement {
    check_url: string;
    serp_item_types: Type[];
    se_results_count: number;
    keyword_difficulty: number | null;
    last_updated_time: string;
    previous_updated_time: string;
    serp_item?: SerpItem;
    is_lost?: boolean;
}

export interface SerpItem {
    type: Type;
    rank_group: number;
    rank_absolute: number;
    position: Position;
    xpath: string;
    domain: Domain;
    title: string;
    url: string;
    breadcrumb: string;
    is_image: boolean;
    is_video: boolean;
    is_featured_snippet: boolean;
    is_malicious: boolean;
    description: null | string;
    pre_snippet: null | string;
    extended_snippet: null | string;
    amp_version: boolean;
    rating: null;
    highlighted: string[] | null;
    links: Link[] | null;
    about_this_result: null;
    main_domain: Target;
    relative_url: string;
    etv: number;
    impressions_etv: number | null;
    estimated_paid_traffic_cost: number | null;
    rank_changes: RankChanges;
}

export enum Domain {
    WWWBedstegamerlaptopDk = "www.bedstegamerlaptop.dk",
}

export interface Link {
    type: string;
    title: string;
    description: null;
    url: string;
}

export enum Position {
    Left = "left",
}

export interface RankChanges {
    previous_rank_absolute: number | null;
    is_new: boolean;
    is_up: boolean;
    is_down: boolean;
}

export interface Metrics {
    organic: { [key: string]: number };
    paid: null;
    featured_snippet: null;
    local_pack: null;
}
